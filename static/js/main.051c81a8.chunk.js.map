{"version":3,"sources":["context/userContext.ts","context/systemsContext.ts","context/userCredContext.ts","components/spacemap/css/SpaceMap.ts","components/spacemap/celestialContext.ts","components/spacemap/Celestial.tsx","components/spacemap/Wormhole.tsx","hooks/useWindowDimensions.ts","components/spacemap/CelestialData.tsx","components/spacemap/SpaceMap.tsx","components/spacemap/SystemsManager.tsx","components/navbar/UserCredentials.tsx","components/navbar/SelectSystem.tsx","components/navbar/Ships.tsx","components/navbar/Locations.tsx","components/navbar/NavBar.tsx","components/money/Money.tsx","hooks/storageHooks.ts","Main.tsx","reportWebVitals.ts","index.tsx"],"names":["userContext","createContext","user","username","credits","loans","ships","updateUser","props","systemsContext","systems","systemSelected","updateSystems","selectSystem","userCredContext","userCred","token","updateUserCred","prop","colors","scale","celestialContext","celestialIndexer","setCelestialIndexer","f","n","s","Celestial","Color","Vector3","FrontSide","AdditiveBlending","mesh","useRef","useState","setHover","active","setActive","useContext","useEffect","index","_c","type","_s","ref","onClick","event","setCelestialDataActive","x","pageX","y","pageY","onPointerOver","onPointerOut","args","attach","roughness","color","getWindowDimensions","window","width","innerWidth","height","innerHeight","CelestialData","shown","setShown","hoverQuit","setHoverQuit","hoverMove","setHoverMove","ratio","setRatios","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","animate","useSpring","opacity","reset","delay","reverse","overflow","maxHeight","from","style","zIndex","positionOffset","handle","bounds","top","right","current","offsetWidth","bottom","offsetHeight","left","className","id","loc","name","cursor","onMouseOver","onMouseOut","String","symbol","backgroundColor","setCelestialActive","div","SpaceMap","CelestialDatas","system","locations","map","Celestials","position","ForwardCanvas","children","value","linear","camera","fov","Provider","_","f1","f2","__","Stars","radius","factor","count","SystemsManager","Systems","UserCredentials","setUser","toke","setToke","showToke","setShowToke","init","setInit","maxWidth","defaultValue","htmlFor","onChange","target","placeholder","SelectSystem","systemsList","Ships","ship","location","maxCargo","spaceAvailable","speed","plating","weapons","Locations","NavBar","Money","Consumer","useLocalStorage","t","JSON","parse","localStorage","getItem","getLocalStorage","setItem","stringify","useSessionStorage","sessionStorage","getSessionStorage","spaceTraders","SpaceTraders","Main","useCookies","cookies","setCookie","session","setUserCred","e","AuthenticationError","setSystems","getAccount","then","res","console","log","listSystems","path","maxAge","getMarketplace","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.051c81a8.chunk.js","sourcesContent":["import { createContext } from \"react\"; \r\nimport { User } from \"spacetraders-sdk/dist/types\";\r\n\r\nexport const userDefault: User = {\r\n  username: \"\",\r\n  credits: 0,\r\n  loans: [],\r\n  ships: [],\r\n}\r\n\r\nexport const userContext = createContext({\r\n  user: userDefault,\r\n  updateUser: (props: any) => {},\r\n})","import { createContext } from \"react\"; \r\nimport { SystemsResponse, System } from \"spacetraders-sdk/dist/types\";\r\n\r\nexport const systemsDefault: SystemsResponse = {\r\n  systems: []\r\n}\r\n\r\nexport const systemSelectedDefault: number = 0\r\n\r\nexport const systemsContext = createContext({\r\n  systems: systemsDefault,\r\n  systemSelected: systemSelectedDefault,\r\n  updateSystems: (props: any) => {},\r\n  selectSystem: (props: any) => {},\r\n})","import { createContext } from \"react\"\r\nimport { UserCred } from \"../types\"\r\n\r\nexport const userCredDefault: UserCred = {\r\n  username: '',\r\n  token: '',\r\n}\r\n\r\nexport const userCredContext = createContext({\r\n  userCred: userCredDefault,\r\n  updateUserCred: (prop: UserCred) => {},\r\n})","export const colors: object = {\r\n  'ASTEROID': \"hsl(0, 0%, 75%)\",\r\n  'MOON': \"hsl(0, 0%, 41%)\",\r\n  'PLANET': \"hsl(116, 53%, 30%)\",\r\n  'GAS_GIANT': \"hsl(180, 100%, 50%)\",\r\n  'WORMHOLE': \"rgb(255, 255, 255)\",\r\n}\r\n\r\nexport const scale: object = {\r\n  'ASTEROID': 1,\r\n  'MOON': 1,\r\n  'PLANET': 2,\r\n  'GAS_GIANT': 5,\r\n  'WORMHOLE': 7.5,\r\n}","import { createContext } from \"react\";\r\nimport { CelestialIndexer } from \"./c_types\"\r\n\r\n// @ts-ignore : fk off\r\nconst _: CelestialIndexer[] = []\r\n\r\nexport const celestialContext = createContext({\r\n  celestialIndexer: _,\r\n  setCelestialIndexer: (f: React.Dispatch<React.SetStateAction<any>>, n: number, s: string) => { },\r\n})","import { useState, useRef, useContext, useEffect } from \"react\"\r\nimport { colors, scale } from \"./css/SpaceMap\"\r\nimport * as THREE from 'three'\r\nimport { celestialContext } from \"./celestialContext\"\r\nimport Wormhole from \"./Wormhole\"\r\n\r\nconst Celestial = (props: any) => {\r\n  const mesh = useRef<THREE.Mesh>(null!)\r\n  const [hovered, setHover] = useState<boolean>(false)\r\n  const [active, setActive] = useState<boolean>(false)\r\n\r\n  const { celestialIndexer, setCelestialIndexer } = useContext(celestialContext)\r\n\r\n  //So we only set this once, rather than upon each rerender\r\n  useEffect(() => {\r\n    setCelestialIndexer(setActive, props.index, \"setCelestialActive\")\r\n  }, [])\r\n\r\n  //useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01))\r\n\r\n  // @ts-ignore: i can not be assed to interface and type just for colors\r\n  const _c: any = colors[props.type] ?? \"rgb(255,255,255)\"\r\n  // @ts-ignore: ditto\r\n  const _s: number = scale[props.type] ?? 1\r\n\r\n  return false ? ( //props.type===\"WORMHOLE\"\r\n    <Wormhole position={props.position} />\r\n  ) : (\r\n    <mesh\r\n      {...props}\r\n      ref={mesh}\r\n      scale={active ? 1.5 * _s : _s}\r\n      onClick={(event) => {\r\n        celestialIndexer[props.index].setCelestialDataActive({active: !active, x: event.pageX, y: event.pageY})\r\n        setActive(!active)\r\n      }}\r\n      onPointerOver={(event) => {\r\n        setHover(true)\r\n      }}\r\n      onPointerOut={(event) => setHover(false)}\r\n    >\r\n      <sphereGeometry args={[1, 32, 32]} />\r\n      <meshStandardMaterial attach=\"material\" roughness={0.5} color={_c} />\r\n    </mesh>\r\n  )\r\n}\r\n\r\nexport default Celestial","import { useEffect, useRef } from \"react\"\r\nimport { useFrame } from \"@react-three/fiber\"\r\nimport { Vector3, Mesh, FrontSide, AdditiveBlending, BackSide, Color } from \"three\"\r\n\r\n\r\n//https://onion2k.github.io/r3f-by-example/#effects\r\n//http://stemkoski.github.io/Three.js/Shader-Glow.html\r\nconst GlowShaderMaterial = {\r\n\tuniforms:\r\n\t{\r\n\t\t\"c\": { type: \"f\", value: .5 },\r\n\t\t\"p\": { type: \"f\", value: 2 },\r\n\t\tglowColor: { type: \"c\", value: new Color(0xE7E0CC) },\r\n\t\tviewVector: { type: \"v3\", value: new Vector3(0, 0, 0) },\r\n\t},\r\n  vertexShader: `\r\n\t\tuniform vec3 viewVector;\r\n\t\tuniform float c;\r\n\t\tuniform float p;\r\n\t\tvarying float intensity;\r\n\t\tvoid main() \r\n\t\t{\r\n\t\t\tvec3 vNormal = normalize( normalMatrix * normal );\r\n\t\t\tvec3 vNormel = normalize( normalMatrix * viewVector );\r\n\t\t\tintensity = pow( c - dot(vNormal, vNormel), p );\r\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\t\t}\r\n  `,\r\n  fragmentShader: `\r\n\t\tuniform vec3 glowColor;\r\n\t\tvarying float intensity;\r\n\t\tvoid main() \r\n\t\t{\r\n\t\t\tvec3 glow = glowColor * intensity;\r\n\t\t\tgl_FragColor = vec4( glow, 1.0 );\r\n\t\t}\r\n  `,\r\n\tside: FrontSide,\r\n\tblending: AdditiveBlending,\r\n\ttransparent: true\r\n};\r\n\r\n\r\nconst Wormhole = (props: any) => {\r\n\tconst glow = useRef<Mesh>(null!)\r\n\tconst disk = useRef<Mesh>(null!)\r\n\tconst diskglow = useRef<Mesh>(null!)\r\n\t\r\n\tuseFrame(({ camera }) => {\r\n\t\t//disk.current.rotation.x += .1\r\n\t\tconst viewVector = new Vector3().subVectors(camera.position, new Vector3());\r\n\t\t// @ts-ignore: idk it worked in the demo\r\n\t\tglow.current.material.uniforms.viewVector.value = viewVector;\r\n\t\t// @ts-ignore: ditto\r\n\t\t// diskglow.current.material.uniforms.viewVector.value = viewVector;\r\n\t\t// diskglow.current.rotation.z += .1\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\t// @ts-ignore: UNIFORMS totally does exit on this\r\n\t\tglow.current.material.uniforms[\"c\"] = {type: \"f\", value: .7}\r\n\t\t// @ts-ignore: ditto\r\n\t\tglow.current.material.uniforms[\"p\"] = {type: \"f\", value: 5}\r\n\t})\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<pointLight\r\n\t\t\t\t{...props}\r\n\t\t\t\tintensity = {.25}\r\n\t\t\t/>\r\n\r\n\t\t\t{/* Blackhole */}\r\n\t\t\t<mesh\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t<sphereGeometry args={[2, 32, 32]} />\r\n\t\t\t\t<meshStandardMaterial attach=\"material\" roughness={0.5} color={'rgb(0,0,0)'} />\r\n\t\t\t</mesh>\r\n\r\n\t\t\t{/* Glow */}\r\n\t\t\t<mesh\r\n\t\t\t\t{...props}\r\n\t\t\t\tref={glow}\r\n\t\t\t>\r\n\t\t\t\t<sphereGeometry args={[6, 32, 32]} />\r\n\t\t\t\t<shaderMaterial\r\n\t\t\t\t\tattach=\"material\"\r\n\t\t\t\t\targs={[GlowShaderMaterial]}\r\n\t\t\t\t\tside={BackSide}\r\n\t\t\t\t\tblending={AdditiveBlending}\r\n\t\t\t\t\ttransparent={true}\r\n\t\t\t\t/>\r\n\t\t\t</mesh>\r\n\r\n\t\t\t{/* Disk */}\r\n\t\t\t{/* <mesh\r\n\t\t\t\t{...props}\r\n\t\t\t\tref={disk}\r\n\t\t\t\trotation={[1.5, 0, 0]}\r\n\t\t\t\tscale={[1.01, 1, 1]}\r\n\t\t\t>\r\n\t\t\t\t<cylinderGeometry args={[12, 12, .1, 32]}/>\r\n\t\t\t\t<meshStandardMaterial attach=\"material\" roughness={0.5} color={'rgb(255,229,146)'} />\r\n\t\t\t</mesh> */}\r\n\r\n\t\t\t{/* Disk Glow */}\r\n\r\n\t\t\t{/* <mesh\r\n\t\t\t\t{...props}\r\n\t\t\t\tref={diskglow}\r\n\t\t\t\trotation={[-.7, 0, 0]}\r\n\t\t\t\tscale={1}\r\n\t\t\t>\r\n\t\t\t\t<torusGeometry args={[12, 4, 32, 100]}/>\r\n\t\t\t\t<shaderMaterial\r\n\t\t\t\t\tattach=\"material\"\r\n\t\t\t\t\targs={[GlowShaderMaterial]}\r\n\t\t\t\t\tside={BackSide}\r\n\t\t\t\t\tblending={AdditiveBlending}\r\n\t\t\t\t\ttransparent={true}\r\n\t\t\t\t/>\r\n\t\t\t</mesh>*/}\r\n\t\t</> \r\n\t)\r\n}\r\n\r\nexport default Wormhole","//yoinked: https://stackoverflow.com/questions/36862334/get-viewport-window-height-in-reactjs\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","import { useState, useContext, useEffect, useRef } from \"react\"\r\nimport useWindowDimensions from \"../../hooks/useWindowDimensions\"\r\nimport { celestialContext } from \"./celestialContext\"\r\nimport Draggable from \"react-draggable\"\r\nimport { animated, useSpring } from \"react-spring\"\r\nimport \"./css/CelestialData.css\"\r\n\r\nexport interface dataActiveState {\r\n  active: boolean,\r\n  x: number,\r\n  y: number,\r\n}\r\n\r\ninterface ratios {\r\n  x: number,\r\n  y: number,\r\n}\r\n\r\nconst CelestialData = (props: any) => {\r\n  const [active, setActive] = useState<dataActiveState>({active: false, x: 0, y: 0})\r\n  const [shown, setShown] = useState<boolean>(false)\r\n  const [hoverQuit, setHoverQuit] = useState<boolean>(false)\r\n  const [hoverMove, setHoverMove] = useState<boolean>(false)\r\n  const [ratio, setRatios] = useState<ratios>({x: 0, y: 0})\r\n  const { height, width } = useWindowDimensions()\r\n\r\n  useEffect(() => {\r\n    if (active?.active===true) {\r\n      setRatios({x: active?.x/width, y: active?.y/height})\r\n    }\r\n  }, [active])\r\n\r\n  const { celestialIndexer, setCelestialIndexer } = useContext(celestialContext)\r\n\r\n  //So we only set this once, rather than upon each rerender\r\n  useEffect(() => {\r\n    setCelestialIndexer(setActive, props.index, \"setCelestialDataActive\")\r\n  }, [])\r\n\r\n  const animate = useSpring({\r\n    opacity: 1,\r\n    reset: false,\r\n    delay: 0,\r\n    reverse: shown,\r\n    overflow: 'hidden',\r\n    maxHeight: '0em',\r\n    from: { maxHeight: '30em'},\r\n  })\r\n  \r\n  const style = {\r\n    // transform: `translate(${active?.x/xy.x * 100}vw, ${active?.y/xy.y * 100}vh)`,\r\n    zIndex: active?.active ? 10 : -10,\r\n    opacity: active?.active ? 1 : 0,\r\n  }\r\n\r\n  const ref = useRef<HTMLDivElement>(null!)\r\n  return (\r\n    <Draggable \r\n      positionOffset={{x: ratio?.x*width, y: ratio?.y*height}} \r\n      handle=\"span\"\r\n      bounds={{\r\n        top: - ratio?.y*height, \r\n        right: width - ratio?.x*width - ref?.current?.offsetWidth,\r\n        bottom: height - ratio?.y*height - ref?.current?.offsetHeight, \r\n        left: - ratio?.x*width}}\r\n    >\r\n      <div\r\n        ref={ref}\r\n        className=\"CelesitalData_Main\"\r\n        id={props.loc.name}\r\n        style={style}\r\n      >\r\n        <div className=\"CelesitalData_Tab\">\r\n          <span>\r\n            <div\r\n              className=\"CelesitalData_Name\"\r\n              style={{ cursor: hoverMove ? 'move' : 'auto' }}\r\n              onMouseOver={() => { setHoverMove(!hoverMove) }}\r\n              onMouseOut={() => { setHoverMove(!hoverMove) }}\r\n            >\r\n              {String(`[${props.loc.symbol}] ${props.loc.name}`)}\r\n            </div>\r\n          </span>\r\n          <div className=\"CelesitalData_NavBar\">\r\n            <div\r\n              className=\"CelesitalData_Mini\"\r\n              onClick={() => {\r\n                setShown(!shown)\r\n              }}\r\n            >\r\n              {shown ? '-' : '☐'}\r\n            </div>\r\n            <div\r\n              className=\"CelestialData_Quit\"\r\n              style={{ backgroundColor: hoverQuit ? 'hsl(0, 100%, 75%)' : '' }}\r\n              onMouseOver={() => { setHoverQuit(!hoverQuit) }}\r\n              onMouseOut={() => { setHoverQuit(!hoverQuit) }}\r\n              onClick={() => {\r\n                setActive({ active: !active.active, x: 0, y: 0 })\r\n                celestialIndexer[props.index].setCelestialActive(false)\r\n              }}\r\n            >\r\n              X\r\n              </div>\r\n          </div>\r\n        </div>\r\n        <animated.div style={animate}>\r\n          {String(`Coordinates: (X: ${props.loc.x}, Y: ${props.loc.y})`)}\r\n          <div\r\n            className=\"CelesitalData_SurplusData\"\r\n          >\r\n            \r\n          </div>\r\n        </animated.div>\r\n      </div>\r\n    </Draggable>\r\n  )\r\n}\r\n\r\nexport default CelestialData","import { useState, useContext } from \"react\"\r\nimport \"./css/SpaceMap.css\"\r\nimport { Canvas } from \"@react-three/fiber\"\r\nimport { Plane, Stars } from \"@react-three/drei\"\r\nimport Celestial from \"./Celestial\"\r\nimport CelestialData, { dataActiveState } from \"./CelestialData\"\r\nimport { celestialContext } from \"./celestialContext\"\r\nimport { Location } from \"spacetraders-sdk/dist/types\"\r\nimport { CelestialIndexer } from \"./c_types\"\r\nimport { systemsContext } from \"../../context/systemsContext\"\r\n\r\nconst SpaceMap = (props: any) => {\r\n  const { systemSelected } = useContext(systemsContext)\r\n  const [celestialIndexer, setCelestialIndexer] = useState<CelestialIndexer[]>([])\r\n  //I pray I never have to attempt to understand the context happening here.\r\n  const sCI = (f: React.Dispatch<React.SetStateAction<any>>, n: number, s: string) => {\r\n    let _: any[] = celestialIndexer\r\n    let f1: React.Dispatch<React.SetStateAction<boolean>> = _[n]?.setCelestialActive!\r\n    let f2: React.Dispatch<React.SetStateAction<dataActiveState>> = _[n]?.setCelestialDataActive!\r\n    //console.log(s, s===\"setCelestialActive\", s===\"setCelestialDataActive\", n)\r\n    if (s===\"setCelestialActive\") {f1=f} \r\n    else if (s===\"setCelestialDataActive\") {f2=f}\r\n    let __: CelestialIndexer = {setCelestialActive: f1, setCelestialDataActive: f2}\r\n    _[n] = __\r\n    setCelestialIndexer(_)\r\n    //console.log(celestialIndexer)\r\n  }\r\n\r\n  const [CelestialDatas, Celestials] = [props.system?.locations?.map((loc: Location, index: number) => {\r\n    const __ = <CelestialData \r\n      key={`${loc.symbol}_DATA`} \r\n      index={index}\r\n      loc={loc}\r\n    />\r\n    return __\r\n  }), props.system?.locations?.map((loc: Location, index: number) => {\r\n    const __ = <Celestial \r\n      key={loc.symbol}\r\n      index={index}\r\n      position={[loc.x, loc.y, 0]}\r\n      name={loc.name}\r\n      type={loc.type}\r\n    />\r\n    return __\r\n  })]\r\n\r\n  // FUCK https://github.com/pmndrs/react-three-fiber/issues/262\r\n  function ForwardCanvas({ children }: any) {\r\n    const value = useContext(celestialContext)\r\n    return (\r\n      <Canvas linear camera={{ position: [0, 0, 200], fov: 100 }}>\r\n        <celestialContext.Provider value={value}>\r\n          {children}\r\n        </celestialContext.Provider>\r\n      </Canvas>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <celestialContext.Provider value={{celestialIndexer: celestialIndexer, setCelestialIndexer: sCI}}> \r\n    <div \r\n      className=\"SpaceMap_Main\" \r\n      style={{zIndex: systemSelected===props.index ? -10 : -100}}\r\n    >\r\n      <div className=\"SpaceMap_Canvas\">\r\n        <ForwardCanvas>\r\n          <ambientLight />\r\n          <Plane position={[0, 0, -300]} args={[3000, 3000, 4, 4]}>\r\n            <meshBasicMaterial color=\"black\" />\r\n          </Plane>\r\n          <Stars \r\n            radius={100}\r\n            factor={1}\r\n            count={300}\r\n          />\r\n          {Celestials}\r\n        </ForwardCanvas>\r\n      </div>\r\n      {CelestialDatas}\r\n    </div>\r\n    </celestialContext.Provider>\r\n  )\r\n}\r\n\r\nexport default SpaceMap","import { useContext } from \"react\"\r\nimport { System } from \"spacetraders-sdk/dist/types\"\r\nimport { systemsContext } from \"../../context/systemsContext\"\r\nimport SpaceMap from \"./SpaceMap\"\r\n\r\nconst SystemsManager = () => {\r\n\tconst { systems } = useContext(systemsContext)\r\n\r\n\tconst Systems = systems?.systems.map((system: System, index: number) => {\r\n\t\treturn <SpaceMap key={system.symbol} system={system} index={index}/>\r\n\t})\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t{Systems}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default SystemsManager","import { useState, useEffect, useContext } from \"react\"\r\nimport { useSpring, animated } from \"react-spring\"\r\nimport { userCredContext } from \"../../context/userCredContext\"\r\n\r\nconst UserCredentials = () => {\r\n  const {userCred, updateUserCred} = useContext(userCredContext)\r\n  const [user, setUser] = useState<string>(userCred?.username ?? '')\r\n  const [toke, setToke] = useState<string>(userCred?.token ?? '')\r\n  const [showToke, setShowToke] = useState<boolean>(false)\r\n  \r\n  const [shown, setShown]  = useState<boolean>(false)\r\n  const [init, setInit] = useState<boolean>(false)\r\n  useEffect(()=>{\r\n    setInit(true)\r\n  }, [])\r\n  const animate = useSpring({\r\n    opacity: init ? 1 : 0,\r\n    reset: false,\r\n    delay: 0,\r\n    reverse: !shown,\r\n    overflow: 'hidden',\r\n    maxWidth: init ? '30em' : '0em',\r\n    maxHeight: init ? '30em' : '0em',\r\n    from: { maxWidth: !init ? '30em' : '0em', maxHeight: !init ? '30em' : '0em'},\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <input \r\n        type=\"button\"\r\n        defaultValue={shown ? `${userCred?.username} ▲` : `${userCred?.username} ▼`}\r\n        onClick={()=>{setShown(!shown)}}\r\n      ></input>\r\n      <animated.div style={animate}>\r\n        <label htmlFor=\"user\">Username: </label>\r\n        <input\r\n          className=\"UserCredentials_Text\"\r\n          id=\"user\"\r\n          type=\"text\"\r\n          onChange={(event: any)=>{setUser(event.target.value)}}\r\n          placeholder={user}\r\n        ></input><br />\r\n        <label htmlFor=\"toke\">Token: </label>\r\n        <input\r\n          className=\"UserCredentials_Text\"\r\n          id=\"toke\"\r\n          type={showToke ? \"password\" : \"text\"}\r\n          onChange={(event: any)=>{setToke(event.target.value)}}\r\n          value={toke}\r\n        ></input>\r\n        <input\r\n          className=\"UserCredentials_Button\"\r\n          id=\"toke\"\r\n          type=\"button\"\r\n          value={showToke ? \"Show\" : \"Hide\"}\r\n          onClick={()=>{setShowToke(!showToke)}}\r\n        ></input><br />\r\n        <input\r\n          className=\"UserCredentials_Button\"\r\n          id=\"submit\"\r\n          type=\"button\"\r\n          defaultValue=\"Submit\"\r\n          onClick={()=>{\r\n            updateUserCred({username: `${user}`, token: `${toke}`})\r\n          }}\r\n        ></input>\r\n      </animated.div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserCredentials","import { useState, useContext, useEffect} from \"react\"\r\nimport { systemsContext } from \"../../context/systemsContext\"\r\nimport { animated, useSpring } from \"react-spring\"\r\n\r\nconst SelectSystem = () => {\r\n  const { systems, systemSelected, selectSystem } = useContext(systemsContext)\r\n  \r\n  const [shown, setShown]  = useState<boolean>(false)\r\n  const [init, setInit] = useState<boolean>(false)\r\n  useEffect(()=>{\r\n    setInit(true)\r\n  }, [])\r\n  const animate = useSpring({\r\n    opacity: init ? 1 : 0,\r\n    reset: false,\r\n    delay: 0,\r\n    reverse: !shown,\r\n    overflow: 'hidden',\r\n    maxWidth: init ? '30em' : '0em',\r\n    maxHeight: init ? '30em' : '0em',\r\n    from: { maxWidth: !init ? '30em' : '0em', maxHeight: !init ? '30em' : '0em'},\r\n  })\r\n\r\n  const systemsList = systems?.systems?.map((system: any, index: number) => {\r\n    return (\r\n      <input\r\n        key={system.name}\r\n        className=\"SelectSystem_Button\"\r\n        type=\"Button\"\r\n        defaultValue={system.name}\r\n        onClick={() => {\r\n          selectSystem(index)\r\n        }}\r\n      ></input>\r\n    )\r\n  })\r\n  \r\n  return (\r\n    <div>\r\n    <input\r\n      className=\"SelectSystem_Button\"\r\n      type=\"Button\"\r\n      defaultValue={shown ? `Select System ▲: ${systems?.systems[systemSelected]?.name}` : `Select System ▼: ${systems?.systems[systemSelected]?.name}`}\r\n      onClick={() => {\r\n        setShown(!shown)\r\n      }}\r\n    ></input>\r\n      <animated.div style={animate}>\r\n        {systemsList}\r\n      </animated.div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectSystem","import { useContext, useState, useEffect } from \"react\"\r\nimport { userContext } from \"../../context/userContext\"\r\nimport { animated, useSpring } from \"react-spring\"\r\nimport \"./css/Ships.css\"\r\n\r\nconst Ships = (props: any) => {\r\n\r\n  const [shown, setShown] = useState<boolean>(false)\r\n  const [init, setInit] = useState<boolean>(false)\r\n  useEffect(()=>{\r\n    setInit(true)\r\n  }, [])\r\n  const animate = useSpring({\r\n    opacity: init ? 1 : 0,\r\n    reset: false,\r\n    delay: 0,\r\n    reverse: !shown,\r\n    overflow: 'hidden',\r\n    maxWidth: init ? '30em' : '0em',\r\n    maxHeight: init ? '30em' : '0em',\r\n    from: { maxWidth: !init ? '30em' : '0em', maxHeight: !init ? '30em' : '0em'},\r\n  })\r\n\r\n  const {user} = useContext(userContext)\r\n  const ships = user?.ships?.map((ship: any) => {\r\n    return (\r\n      <div className=\"Ships_Singular\" key={ship.id}>\r\n        ID: {ship.id}<br/>\r\n        Type: {ship.type}<br/>\r\n        Location: {ship.location}<br/>\r\n        {/* X: {ship.x}\r\n        Y: {ship.y} */}\r\n        {/* Cargo: {ship.cargo} */}\r\n        Cargo: {ship.maxCargo - ship.spaceAvailable} / {ship.maxCargo}<br/>\r\n        {/* Class: {ship.class}<br/> */}\r\n        Speed: {ship.speed}<br/>\r\n        Plating: {ship.plating}<br/>\r\n        Weapons: {ship.weapons}<br/>\r\n        {/* Manufacturer: {ship.manufacturer}<br/> */}\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"Ships_Main\">\r\n      <input\r\n        className=\"Ships_Button\"\r\n        type=\"button\"\r\n        onClick={() => { \r\n          setShown(!shown)\r\n        }}\r\n        value={shown ? \"Ships ▲\" : \"Ships ▼\"}\r\n      ></input>\r\n      <animated.div style={animate}>\r\n        <div className=\"Ships_Grid\">\r\n          {ships}\r\n        </div>\r\n      </animated.div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Ships","import { useState, useEffect, useContext } from \"react\"\r\nimport { animated, useSpring } from \"react-spring\"\r\nimport { systemsContext } from \"../../context/systemsContext\"\r\nimport \"./css/Locations.css\"\r\n\r\nconst Locations = (props: any) => {\r\n  const { systems, systemSelected } = useContext(systemsContext)\r\n  const [shown, setShown] = useState(false)\r\n\r\n  const [init, setInit] = useState(false)\r\n  useEffect(()=>{\r\n    setInit(true)\r\n  }, [])\r\n  const animate = useSpring({\r\n    opacity: init ? 1 : 0,\r\n    reset: false,\r\n    delay: 0,\r\n    reverse: !shown,\r\n    overflow: 'hidden',\r\n    maxWidth: init ? '30em' : '0em',\r\n    maxHeight: init ? '30em' : '0em',\r\n    from: { maxWidth: !init ? '30em' : '0em', maxHeight: !init ? '30em' : '0em'},\r\n  })\r\n\r\n  const locations = systems?.systems[systemSelected]?.locations.map((location: any) => {\r\n    return (\r\n      <div key={location.symbol}>\r\n        {location.name}\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"Locations_Main\">\r\n      <input\r\n        type=\"button\"\r\n        onClick={() => {  \r\n          setShown(!shown)\r\n        }}\r\n        value={shown ? \"Locations ▲\" : \"Locations ▼\"}\r\n      ></input>\r\n      <animated.div style={animate}>\r\n        {locations}\r\n      </animated.div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Locations","import \"./css/NavBar.css\"\r\nimport UserCredentials from \"./UserCredentials\"\r\nimport SelectSystem from \"./SelectSystem\"\r\nimport Ships from \"./Ships\"\r\nimport Locations from \"./Locations\"\r\n\r\nconst NavBar = () => {\r\n\r\n  return (\r\n    <div className=\"NavBar_Main\">\r\n      <div className=\"NavBar_Buttons\">\r\n        <UserCredentials />\r\n        <SelectSystem/>\r\n        <Ships />\r\n        <Locations />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavBar","import { useState, useEffect } from \"react\"\r\nimport { userContext } from \"../../context/userContext\"\r\nimport { animated, useSpring } from \"react-spring\"\r\nimport \"./css/Money.css\"\r\n\r\nconst Money = () => {\r\n\r\n  const [shown, setShown] = useState<boolean>(false)\r\n  const [init, setInit] = useState<boolean>(false)\r\n  useEffect(()=>{\r\n    setInit(true)\r\n  }, [])\r\n  const animate = useSpring({\r\n    zIndex: 10,\r\n    opacity: init ? 1 : 0,\r\n    reset: false,\r\n    delay: 0,\r\n    reverse: !shown,\r\n    overflow: 'hidden',\r\n    maxWidth: init ? '30em' : '0em',\r\n    maxHeight: init ? '30em' : '0em',\r\n    from: { maxWidth: !init ? '30em' : '0em', maxHeight: !init ? '30em' : '0em'},\r\n  })\r\n\r\n  return (\r\n    <userContext.Consumer>\r\n      {({ user }) => (\r\n        <div className=\"Money_Main\">\r\n          <div \r\n            className=\"Money_Credits\"\r\n            onClick={()=>{\r\n              setShown(!shown)\r\n            }}\r\n          >\r\n            Credits: {user?.credits}\r\n          </div>\r\n          <animated.div style={animate}>\r\n            words\r\n          </animated.div>\r\n        </div>\r\n      )}\r\n    </userContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default Money","import { useEffect, useState } from \"react\"\r\n\r\nfunction getLocalStorage<S>(name: string): any {\r\n  // @ts-ignore : JSON.parse only accepts string, but nothing bad happens if null is passed, hence this.\r\n  const _: S = JSON.parse(localStorage.getItem(name))\r\n  return _\r\n}\r\n\r\nexport function useLocalStorage<S>(name: string) {\r\n  const t:[S, React.Dispatch<React.SetStateAction<S>>] = useState(getLocalStorage<S>(name))\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(name, JSON.stringify(t[0]))\r\n  }, [name, t]);\r\n\r\n  return t\r\n}\r\n\r\nfunction getSessionStorage<S>(name: string): any {\r\n  // @ts-ignore : JSON.parse only accepts string, but nothing bad happens if null is passed, hence this.\r\n  const _: S = JSON.parse(sessionStorage.getItem(name))\r\n  return _\r\n}\r\n\r\nexport function useSessionStorage<S>(name: string) {\r\n  const t:[S, React.Dispatch<React.SetStateAction<S>>] = useState(getSessionStorage<S>(name))\r\n\r\n  useEffect(() => {\r\n    sessionStorage.setItem(name, JSON.stringify(t[0]))\r\n  }, [name, t]);\r\n\r\n  return t\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport \"./css/Main.css\"\r\n// import { settingsDefault, settingsContext } from \"./context/settingsContext\"\r\n// import settingsInterface from \"./interfaces/settings\"\r\nimport { userContext } from \"./context/userContext\"\r\nimport { systemsContext } from \"./context/systemsContext\"\r\nimport { userCredContext } from \"./context/userCredContext\"\r\n// import systemsInterface from \"./interfaces/systems\"\r\nimport SystemsManager from \"./components/spacemap/SystemsManager\"\r\nimport NavBar from \"./components/navbar/NavBar\"\r\nimport Money from \"./components/money/Money\"\r\nimport { useCookies } from \"react-cookie\"\r\nimport { useLocalStorage, useSessionStorage } from \"./hooks/storageHooks\"\r\nimport { System, User, SystemsResponse } from \"spacetraders-sdk/dist/types\"\r\nimport { UserCred } from \"./types\"\r\n//import SpaceTradersExtend, { SystemsResponse } from \"./spacetraders/spacetraders\"\r\nimport { SpaceTraders } from \"spacetraders-sdk\"\r\nimport { AuthenticationError } from \"spacetraders-sdk/dist/errors\"\r\n\r\nconst spaceTraders = new SpaceTraders()\r\n\r\nconst Main = () => {\r\n  const [cookies, setCookie, removeCookie] = useCookies(['session'])\r\n  const session = cookies.session ?? null\r\n\r\n  const [userCred, setUserCred] = useLocalStorage<UserCred>('user')\r\n  const [userError, setUserError] = useState<boolean>(false)\r\n  try {\r\n    userCred.username && spaceTraders.init(userCred.username, userCred.token)\r\n  } catch (e) {\r\n    //alert(e)\r\n    if (e instanceof AuthenticationError) {\r\n\r\n    }\r\n  }\r\n\r\n  const [user, setUser] = useSessionStorage<User>('user')\r\n  const updateUser = (user: User) => {\r\n    userCred && spaceTraders.getAccount()\r\n      .then(res => {\r\n        console.log(res.user)\r\n        setUser(res.user)\r\n      })\r\n  }\r\n\r\n  const [systems, setSystems] = useSessionStorage<SystemsResponse>('systems')\r\n  const updateSystems = (systems: any) => {\r\n    userCred && spaceTraders.listSystems()\r\n      .then(res => {\r\n        console.log(res)\r\n        setSystems(res)\r\n      })\r\n  } \r\n\r\n  const [systemSelected, selectSystem] = useSessionStorage<number>('systemSelected') ?? 0\r\n\r\n  useEffect(() => {\r\n    if (userCred) {\r\n      if (user===null || session===null) {\r\n        spaceTraders.getAccount()\r\n          .then(res => {\r\n            console.log(res)\r\n            setUser(res.user)\r\n          })\r\n      }\r\n      if (systems===null || session===null) {\r\n        spaceTraders.listSystems()\r\n          .then(res => {\r\n            console.log(res)\r\n            setSystems(res)\r\n          })\r\n      }\r\n    }\r\n    if (session===null) {\r\n      setCookie('session', '', { path: '/ ', maxAge: 900})\r\n    }\r\n    spaceTraders.getMarketplace('OE-PM-TR')\r\n      .then(res => {\r\n        console.log(res)\r\n      })\r\n  }, [userCred, systems, user, session])\r\n\r\n  return (\r\n    <userCredContext.Provider value={{userCred: userCred, updateUserCred: setUserCred}}>\r\n    <userContext.Provider value={{user: user, updateUser: updateUser}}>\r\n    <systemsContext.Provider value={{systems: systems, updateSystems: updateSystems, systemSelected: systemSelected, selectSystem: selectSystem}}>\r\n    <div className=\"Main\">\r\n      <SystemsManager />\r\n      <div className=\"Main_ResponsiveGrid\">\r\n        <NavBar />\r\n        <Money />\r\n      </div>\r\n    </div>\r\n    </systemsContext.Provider>\r\n    </userContext.Provider>\r\n    </userCredContext.Provider>\r\n  )\r\n}\r\n\r\nexport default Main","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './Main';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}